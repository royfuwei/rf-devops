name: Deploy Local k8s

on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
    secrets:
      envPAT:
        required: true
      KUBE_CONFIG:
        required: true
      HARBOR_HOST:
        required: true
      HARBOR_USERNAME:
        required: true
      HARBOR_TOKEN:
        required: true
      # env secrets
      # DOCKER_EMAIL:
      #   required: true
      # DB_MONGO_URI:
      #   required: true
      # PUBLIC_SUPABASE_URL:
      #   required: true
      # PUBLIC_SUPABASE_ANON_KEY:
      #   required: true
      # LINE_CHANNEL_ID:
      #   required: true
      # LINE_CHANNEL_ACCESS_TOKEN:
      #   required: true
      # LINE_CHANNEL_SECRET:
      #   required: true
      # LINE_NOTIFY_CLIENT_ID:
      #   required: true
      # LINE_NOTIFY_CLIENT_SECRET:
      #   required: true

jobs:
  deploy-local-k8s:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set up kubectl
      #   uses: azure/setup-kubectl@v1
      #   with:
      #     version: 'latest'

      # - uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #   with:
      #     args: get pods

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'latest'

      - uses: pyTooling/Actions/with-post-step@v0.4.5
        with:
          main: |
            echo "Logging in to ${{ secrets.HARBOR_HOST }} ..."
            helm registry login \
              --username ${{ secrets.HARBOR_USERNAME }} \
              --password ${{ secrets.HARBOR_TOKEN }} \
              ${{ secrets.HARBOR_HOST }}

          post: |
            echo "Logging out of ${{ secrets.HARBOR_HOST }} ..."
            helm registry logout ${{ secrets.HARBOR_HOST }}
            
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: royfuwei/rfjs-devops
          fetch-depth: 0
          token: ${{ secrets.envPAT }}

      - name: apply with envsubst 
        uses: neosec-com/kubectl-aws-eks@1.1.2
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        with:
          args: |
            ls -la
            kubectl get pods

      - name: Deploy local k8s
        env:
          HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
          HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo $HARBOR_HOST
          cd ${{ inputs.projectName }}
          ls -la
          helm version      
